#!/usr/bin/env bash
set -euo pipefail

usage() {
  cat <<'USAGE'
Usage:
  bin/check-in [-m NOTE] [-d YYYY-MM-DD] [--no-push]

Options:
  -m NOTE       ひとことメモ（任意）
  -d DATE       記録する日付（省略時は JST の本日）
  --no-push     push しない
USAGE
}

# 引数なしならヘルプ表示
if [[ $# -eq 0 ]]; then
  usage
  exit 0
fi

NOTE=""; DATE=""; PUSH=1
while [[ $# -gt 0 ]]; do
  case "$1" in
    -m) NOTE="$2"; shift 2;;
    -d) DATE="$2"; shift 2;;
    --no-push) PUSH=0; shift;;
    -h|--help) usage; exit 0;;
    *) echo "unknown option: $1" >&2; usage; exit 2;;
  esac
done

ROOT="$(git rev-parse --show-toplevel 2>/dev/null || true)"
[[ -n "${ROOT}" ]] || { echo "git 管理下で実行してください"; exit 1; }
cd "${ROOT}"

# JST の今日
if [[ -z "${DATE}" ]]; then
  DATE="$(TZ=Asia/Tokyo date +%F)"
fi

# author/committer の日時を JST に固定（時刻は 09:00 とする）
export GIT_AUTHOR_DATE="${DATE}T09:00:00+09:00"
export GIT_COMMITTER_DATE="${GIT_AUTHOR_DATE}"

SUBJECT="check-in ${DATE}"
BODY=("Check-In-Date: ${DATE}")
if [[ -n "${NOTE}" ]]; then BODY+=("Note: ${NOTE}"); fi

# 配列で安全に -m を積む
args=(--allow-empty -m "${SUBJECT}")
for m in "${BODY[@]}"; do
  args+=(-m "$m")
done

git commit "${args[@]}"

if [[ "${PUSH}" -eq 1 ]]; then
  BRANCH="$(git rev-parse --abbrev-ref HEAD)"
  git push -u origin "${BRANCH}"
fi

echo "チェックイン完了: ${SUBJECT}"

